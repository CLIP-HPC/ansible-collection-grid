---
name: CI
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
  pull_request:
  # schedule:
  #   - cron: '0 6 * * *'
  workflow_dispatch:

concurrency:
  group: >-
    ${{ github.workflow }}-${{
      github.event.pull_request.number || github.sha
    }}
  cancel-in-progress: true

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1

###
# Sanity tests (REQUIRED)
#
# https://docs.ansible.com/ansible/latest/dev_guide/testing_sanity.html

  sanity:
    name: Sanity (â’¶${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          # It's important that Sanity is tested against all stable-X.Y branches
          # Testing against `devel` may fail as new tests are added.
          # An alternative to `devel` is the `milestone` branch with
          # gets synchronized with `devel` every few weeks and therefore
          # tends to be a more stable target. Be aware that it is not updated
          # around creation of a new stable branch, this might cause a problem
          # that two different versions of ansible-test use the same sanity test
          # ignore.txt file.
          # Add new versions announced in
          # https://github.com/ansible-collections/news-for-maintainers in a timely manner,
          # consider dropping testing against EOL versions and versions you don't support.
          - stable-2.16
          - stable-2.17
          - stable-2.18
          - devel
        # - milestone

    runs-on: ubuntu-latest

    steps:
      # Run sanity tests inside a Docker container.
      # The docker container has all the pinned dependencies that are
      # required and all Python versions Ansible supports.
      - name: Perform sanity testing
        # See the documentation for the following GitHub action on
        # https://github.com/ansible-community/ansible-test-gh-action/blob/main/README.md
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          testing-type: sanity
          # OPTIONAL If your sanity tests require code
          # from other collections, install them like this
          # test-deps: >-
          #   ansible.netcommon
          #   ansible.utils
          # OPTIONAL If set to true, will test only against changed files,
          # which should improve CI performance. See limitations on
          # https://github.com/ansible-community/ansible-test-gh-action#pull-request-change-detection
          pull-request-change-detection: false


  discover:
    runs-on: ubuntu-latest
    needs: sanity
    outputs:
      roles: ${{ steps.transform.outputs.directories }}
    steps:
      - uses: actions/checkout@v4

      # Add a step to detect the event type
      - name: Set test scope
        id: scope
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" || "${{ github.event_name }}" == "schedule" ]]; then
            echo "all_roles=true" >> $GITHUB_OUTPUT
          else
            echo "all_roles=false" >> $GITHUB_OUTPUT
          fi

      # Add a step to list all roles when running full tests
      - name: List all roles
        id: list-roles
        if: steps.scope.outputs.all_roles == 'true'
        run: |
          echo "role_files=$(find roles/* -maxdepth 0 -type d | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Find changeset
        if: steps.scope.outputs.all_roles == 'false'
        uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          list-files: shell
          filters: |
            role:
              - roles/*/**

      - name: Transform to directories
        id: transform
        continue-on-error: false
        run: |
          folders=()
          if [[ "${{ steps.scope.outputs.all_roles }}" == "true" ]]; then
            files="${{ steps.list-roles.outputs.role_files }}"
          else
            files="${{ steps.filter.outputs.role_files }}"
          fi
          for f in $files;
            do
              echo "Adding $(dirname $f) to folders";
              folders+=($(dirname $f | cut -d'/' -f2));
          done
          unique_folders=($(printf "%s\n" "${folders[@]}" | sort -u | tr '\n' ' '))
          echo "Found ${#unique_folders[@]} roles";
          existing_folders=()
          echo "Checking if roles still exists ";
          for folder in ${unique_folders[*]};
            do
              echo "Checking if roles/$folder exists";
              if [ -d "roles/$folder" ]; then
                  echo "roles/$folder exists";
                  existing_folders+=("$folder")
              fi
            done
          echo "directories=$(jq --compact-output --null-input '$ARGS.positional' --args -- ${existing_folders[@]})" >> $GITHUB_OUTPUT

  molecule:
    needs: discover
    runs-on: ubuntu-latest
    if: ${{ needs.discover.outputs.roles != '' && toJson(fromJson(needs.discover.outputs.roles)) != '[]' }}
    strategy:
      matrix:
        role: ${{ fromJSON(needs.discover.outputs.roles) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Molecule and dependencies
        run: |
          pip install ansible molecule-plugins[docker] docker

      - name: Run molecule tests for role ${{ matrix.role }}
        run: |
          molecule --version
          cd roles/${{ matrix.role }}
          molecule test --all --parallel
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          ANSIBLE_ROLES_PATH: "${GITHUB_WORKSPACE}/roles:~/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles"

  check:  # This job does nothing and is only used for the branch protection
          # or multi-stage CI jobs, like making sure that all tests pass before
          # a publishing job is started.
    if: always()

    needs:
      - pre-commit
      - sanity
      - molecule

    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: molecule
